{
  "Resources": {
   "VPCB9E5F0B4": {
    "Type": "AWS::EC2::VPC",
    "Properties": {
     "CidrBlock": "10.0.0.0/16",
     "EnableDnsHostnames": true,
     "EnableDnsSupport": true,
     "InstanceTenancy": "default",
     "Tags": [
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/VPC"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/Resource"
    }
   },
   "VPCPublicSubnet1SubnetB4246D30": {
    "Type": "AWS::EC2::Subnet",
    "Properties": {
     "AvailabilityZone": {
      "Fn::Select": [
       0,
       {
        "Fn::GetAZs": ""
       }
      ]
     },
     "CidrBlock": "10.0.0.0/26",
     "MapPublicIpOnLaunch": true,
     "Tags": [
      {
       "Key": "aws-cdk:subnet-name",
       "Value": "Public"
      },
      {
       "Key": "aws-cdk:subnet-type",
       "Value": "Public"
      },
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/VPC/PublicSubnet1"
      }
     ],
     "VpcId": {
      "Ref": "VPCB9E5F0B4"
     }
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/PublicSubnet1/Subnet"
    }
   },
   "VPCPublicSubnet1RouteTableFEE4B781": {
    "Type": "AWS::EC2::RouteTable",
    "Properties": {
     "Tags": [
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/VPC/PublicSubnet1"
      }
     ],
     "VpcId": {
      "Ref": "VPCB9E5F0B4"
     }
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/PublicSubnet1/RouteTable"
    }
   },
   "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
     "RouteTableId": {
      "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
     },
     "SubnetId": {
      "Ref": "VPCPublicSubnet1SubnetB4246D30"
     }
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/PublicSubnet1/RouteTableAssociation"
    }
   },
   "VPCPublicSubnet1DefaultRoute91CEF279": {
    "Type": "AWS::EC2::Route",
    "Properties": {
     "DestinationCidrBlock": "0.0.0.0/0",
     "GatewayId": {
      "Ref": "VPCIGWB7E252D3"
     },
     "RouteTableId": {
      "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
     }
    },
    "DependsOn": [
     "VPCVPCGW99B986DC"
    ],
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/PublicSubnet1/DefaultRoute"
    }
   },
   "VPCIGWB7E252D3": {
    "Type": "AWS::EC2::InternetGateway",
    "Properties": {
     "Tags": [
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/VPC"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/IGW"
    }
   },
   "VPCVPCGW99B986DC": {
    "Type": "AWS::EC2::VPCGatewayAttachment",
    "Properties": {
     "InternetGatewayId": {
      "Ref": "VPCIGWB7E252D3"
     },
     "VpcId": {
      "Ref": "VPCB9E5F0B4"
     }
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/VPCGW"
    }
   },
   "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
    "Type": "Custom::VpcRestrictDefaultSG",
    "Properties": {
     "ServiceToken": {
      "Fn::GetAtt": [
       "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
       "Arn"
      ]
     },
     "DefaultSecurityGroupId": {
      "Fn::GetAtt": [
       "VPCB9E5F0B4",
       "DefaultSecurityGroup"
      ]
     },
     "Account": {
      "Ref": "AWS::AccountId"
     }
    },
    "UpdateReplacePolicy": "Delete",
    "DeletionPolicy": "Delete",
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
    }
   },
   "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Version": "2012-10-17",
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "lambda.amazonaws.com"
        }
       }
      ]
     },
     "ManagedPolicyArns": [
      {
       "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      }
     ],
     "Policies": [
      {
       "PolicyName": "Inline",
       "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
         {
          "Effect": "Allow",
          "Action": [
           "ec2:AuthorizeSecurityGroupIngress",
           "ec2:AuthorizeSecurityGroupEgress",
           "ec2:RevokeSecurityGroupIngress",
           "ec2:RevokeSecurityGroupEgress"
          ],
          "Resource": [
           {
            "Fn::Join": [
             "",
             [
              "arn:",
              {
               "Ref": "AWS::Partition"
              },
              ":ec2:",
              {
               "Ref": "AWS::Region"
              },
              ":",
              {
               "Ref": "AWS::AccountId"
              },
              ":security-group/",
              {
               "Fn::GetAtt": [
                "VPCB9E5F0B4",
                "DefaultSecurityGroup"
               ]
              }
             ]
            ]
           }
          ]
         }
        ]
       }
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
    }
   },
   "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
     "Code": {
      "S3Bucket": {
       "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
      },
      "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
     },
     "Timeout": 900,
     "MemorySize": 128,
     "Handler": "__entrypoint__.handler",
     "Role": {
      "Fn::GetAtt": [
       "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
       "Arn"
      ]
     },
     "Runtime": "nodejs18.x",
     "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
    },
    "DependsOn": [
     "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
    ],
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
     "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
     "aws:asset:property": "Code"
    }
   },
   "InstanceInstanceSecurityGroupF0E2D5BE": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
     "GroupDescription": "CdkConferenceStack/Instance/InstanceSecurityGroup",
     "SecurityGroupEgress": [
      {
       "CidrIp": "0.0.0.0/0",
       "Description": "Allow all outbound traffic by default",
       "IpProtocol": "-1"
      }
     ],
     "SecurityGroupIngress": [
      {
       "CidrIp": {
        "Ref": "MyIpAddress"
       },
       "Description": "from Your IP address",
       "FromPort": 8080,
       "IpProtocol": "tcp",
       "ToPort": 8080
      }
     ],
     "Tags": [
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/Instance"
      }
     ],
     "VpcId": {
      "Ref": "VPCB9E5F0B4"
     }
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/Instance/InstanceSecurityGroup/Resource"
    }
   },
   "InstanceInstanceRoleE9785DE5": {
    "Type": "AWS::IAM::Role",
    "Properties": {
     "AssumeRolePolicyDocument": {
      "Statement": [
       {
        "Action": "sts:AssumeRole",
        "Effect": "Allow",
        "Principal": {
         "Service": "ec2.amazonaws.com"
        }
       }
      ],
      "Version": "2012-10-17"
     },
     "Tags": [
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/Instance"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/Instance/InstanceRole/Resource"
    }
   },
   "InstanceInstanceProfileAB5AEF02": {
    "Type": "AWS::IAM::InstanceProfile",
    "Properties": {
     "Roles": [
      {
       "Ref": "InstanceInstanceRoleE9785DE5"
      }
     ]
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/Instance/InstanceProfile"
    }
   },
   "InstanceC1063A87": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
     "AvailabilityZone": {
      "Fn::Select": [
       0,
       {
        "Fn::GetAZs": ""
       }
      ]
     },
     "IamInstanceProfile": {
      "Ref": "InstanceInstanceProfileAB5AEF02"
     },
     "ImageId": {
      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
     },
     "InstanceType": "t2.micro",
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "InstanceInstanceSecurityGroupF0E2D5BE",
        "GroupId"
       ]
      }
     ],
     "SubnetId": {
      "Ref": "VPCPublicSubnet1SubnetB4246D30"
     },
     "Tags": [
      {
       "Key": "Name",
       "Value": "CdkConferenceStack/Instance"
      }
     ],
     "UserData": {
      "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum install -y wget tar\nwget -O vscode-server.tar.gz https://update.code.visualstudio.com/latest/server-linux-x64/stable\nmkdir -p ~/.vscode-server/bin && tar -xzvf vscode-server.tar.gz -C ~/.vscode-server/bin\nrm vscode-server.tar.gz\n~/.vscode-server/bin/code-server --host 0.0.0.0 --port 8080 &"
     }
    },
    "DependsOn": [
     "InstanceInstanceRoleE9785DE5"
    ],
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/Instance/Resource"
    }
   },
   "CDKMetadata": {
    "Type": "AWS::CDK::Metadata",
    "Properties": {
     "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VPPW+DQAz9LdmPK9CpY8oQZUNQZa3MYVIn4IvOvkQR4r9XNKFIlTr5fVnPzm32+mazDdwkce056amxY63gzgZu8jmiy+14uDhTdHwoC1PGpidXx4ZRZ21FlY+KH9D0uOqrthXxjkDJ8294BntWDIy6A8Ub3J81T7ZVBfc1IKvZsyiwQ1Oji4H0vgs+Xn6a/gpLdDIEgx0r/7homYtdBt9Rj9NkKhQfg0NTRFE/rLTjf6wy+Cu1GN5B0GxFUGuFI/Fx3ikhwICKYSaF55bmryfDvkV7kpdrntostenmJERJiKw0oK0e8xv0QS3CkAEAAA=="
    },
    "Metadata": {
     "aws:cdk:path": "CdkConferenceStack/CDKMetadata/Default"
    },
    "Condition": "CDKMetadataAvailable"
   }
  },
  "Parameters": {
   "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
    "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
   },
   "BootstrapVersion": {
    "Type": "AWS::SSM::Parameter::Value<String>",
    "Default": "/cdk-bootstrap/hnb659fds/version",
    "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
   },
   "MyIpAddress": {
     "Type": "String",
     "Description": "Your IP address with CIDR suffix (e.g., 203.0.113.0/32)"
    }
  },
  "Conditions": {
   "CDKMetadataAvailable": {
    "Fn::Or": [
     {
      "Fn::Or": [
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "af-south-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ap-east-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ap-northeast-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ap-northeast-2"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ap-south-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ap-southeast-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ap-southeast-2"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "ca-central-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "cn-north-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "cn-northwest-1"
        ]
       }
      ]
     },
     {
      "Fn::Or": [
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "eu-central-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "eu-north-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "eu-south-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "eu-west-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "eu-west-2"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "eu-west-3"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "il-central-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "me-central-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "me-south-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "sa-east-1"
        ]
       }
      ]
     },
     {
      "Fn::Or": [
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "us-east-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "us-east-2"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "us-west-1"
        ]
       },
       {
        "Fn::Equals": [
         {
          "Ref": "AWS::Region"
         },
         "us-west-2"
        ]
       }
      ]
     }
    ]
   }
  },
  "Rules": {
   "CheckBootstrapVersion": {
    "Assertions": [
     {
      "Assert": {
       "Fn::Not": [
        {
         "Fn::Contains": [
          [
           "1",
           "2",
           "3",
           "4",
           "5"
          ],
          {
           "Ref": "BootstrapVersion"
          }
         ]
        }
       ]
      },
      "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
     }
    ]
   }
  }
 }